// Generated by CoffeeScript 1.10.0
(function() {
  var OpsaAPI, Properties, Utils;

    Utils = require('opsa-api-utils.coffee');

    Properties = require('opsa-api-properties.coffee');

  OpsaAPI = function(xsrfToken, jSessionId) {
    this.xsrfToken = xsrfToken.slice(1, -1);
    this.jSessionId = jSessionId;
  };

  OpsaAPI.prototype.invoke = function(callback) {
    this.invoker(callback);
  };

  OpsaAPI.prototype.login = function(userRes, loginCallback) {
    var invokeAPI, loginForm, opsaUri, seqUrl, xsrfUrl;
    if (!Utils.okToContinue()) {
      return;
    }
    opsaUri = Utils.getOpsaUri();
      seqUrl = opsaUri + "/j_security_check";
      xsrfUrl = opsaUri + "/rest/getXSRFToken";
    loginForm = {
      j_username: Properties.user,
      j_password: Properties.password
    };
    invokeAPI = function(res, apiSessionResponse) {
      var sessionId, xsrfToken;
      xsrfToken = res.body;
      sessionId = Utils.getSessionId(apiSessionResponse, 0);
      return loginCallback(xsrfToken, sessionId);
    };
    Utils.requestp(opsaUri).then((function(res) {
      var jar4SecurityRequest;
      jar4SecurityRequest = Utils.createJar(res, seqUrl, 1);
      Utils.requestp(seqUrl, jar4SecurityRequest, 'POST', {}, loginForm).then((function(res) {
        return Utils.requestp(opsaUri, jar4SecurityRequest).then((function(apiSessionResponse) {
          var jar4XSRFRequest;
          jar4XSRFRequest = Utils.createJar(apiSessionResponse, xsrfUrl);
          return Utils.requestp(xsrfUrl, jar4XSRFRequest).then((function(res) {
            return invokeAPI(res, apiSessionResponse);
          }));
        }));
      }));
    }), function(err) {
      Utils.ongoing = false;
      console.error('%s; %s', err.message, Utils.getOpsaUri());
      console.log('%j', err.res.statusCode);
    });
    return userRes.reply('Please wait...');
  };

  module.exports = {
    OpsaAPI: OpsaAPI
  };

}).call(this);

//# sourceMappingURL=opsa-general-api.js.map
